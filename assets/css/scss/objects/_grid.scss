$grid-border-width: 1px !default;
$grid-border-color: #ededed !default;
$total-grid-columns : 6 !default;

.tailor-ui {

	.tailor-grid__item {
		min-height: 1px;
		width: 100%;
		border-width: $grid-border-width;
		border-color: $grid-border-color;
	}
}

@mixin grid( $size ) {

	.tailor-ui {

		.tailor-grid--#{$size} {

			@include clearfix;

			.tailor-grid__item {
				//display: -webkit-flex;
				//display: -ms-flexbox;
				//display: flex;
				//flex-direction: column;
				padding: 1em;
				float: left;
			}

			&.tailor-grid:not( .tailor-grid--masonry ) {
				display: -webkit-flex;
				display: -ms-flexbox;
				display: flex;
				flex-wrap: wrap;

				> .tailor-grid__item {
					display: -webkit-flex;
					display: -ms-flexbox;
					display: flex;
					flex-direction: column;
				}
			}

			&.tailor-grid--bordered {

				> .tailor-grid__item {
					border-left-style: none;
					border-top-style: none;
					border-right-style: solid;
					border-bottom-style: solid;
				}
			}
		}

		@for $i from 1 through $total-grid-columns {

			.tailor-grid--#{$size} {

				&.tailor-grid--#{$i} {

					> .tailor-grid__item {
						width: percentage( 1 / $i );

						&:nth-child( #{$i}n + #{( $i + 1 )} ) {
							clear: left;
						}
					}
				}

				&.tailor-grid--bordered {

					&.tailor-grid--#{$i} {

						> .tailor-grid__item {

							&:nth-child( -n + #{$i} ) {
								border-top-style: solid;
							}

							&:nth-child( #{$i}n + 1 ) {
								border-left-style: solid;
							}
						}
					}
				}
			}
		}
	}
}

@include grid( $size: x-small );

@media #{$small-up} {
	@include grid( $size: small );
}

@media #{$medium-up} {
	@include grid( $size: medium );
}

@media #{$large-up} {
	@include grid( $size: large );
}

@media #{$x-large} {
	@include grid( $size: x-large );
}